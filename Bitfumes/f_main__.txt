from fastapi import FastAPI
from typing import Optional


from .f_model__ import Blog


app = FastAPI()


@app.get('/blog')
async def index(limit=10, published : bool=True, sort: Optional[str]=None): # 유효성 검사를 할수 있음
    # only get 10 published blogs
    if published:
        return {'data': f'{limit} published blogs from the database'}
    else:
        return {'data': f'{limit} blogs from the database'}


# -----------------------------------------------------------------
# Fast API {id} 이 먼저 올라가면 거기서 먼저 읽기 때문에 문제가 발생한다.
# 그문제를 해결하기 위해서 {id} 보다 전방선언되여야 함.
@app.get('/blog/unpublished')
def unpubliched():
    return {'data':'all unpublished blogs'}

@app.get('/blog/{id}')
async def show(id : int):
    # fetch blog with id = id
    return {'data': id }
# -----------------------------------------------------------------


@app.get('/blog/{id}/comments')
async def comments(id, limit=10):
    # fetch comments of blog with id = id
    return limit



@app.post('/blog')
def create_blog(blog : Blog):
    return {'data':f'Blog is created with title as {blog.title}'}


###### 
# if __name__ == "__main__":
#     uvicorn.run(app, host='127.0.0.1', port="8000")